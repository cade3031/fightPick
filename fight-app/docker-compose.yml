version: '3.8'

services:
  # Frontend React app
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
    environment:
      - REACT_APP_API_URL=http://100.119.251.66:8080
      - NODE_ENV=development
    command: npm run dev
    depends_on:
      - backend
    container_name: fight-app-frontend
    networks:
      - fight-app_network

  # Backend Node.js server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fightpick_db
      - OLLAMA_URL=http://ollama:11434
      - PORT=8080
    command: npm run dev
    volumes:
      - ./server/src:/app/server/src
    depends_on:
      - db
      - ollama
    container_name: fight-app-backend
    networks:
      - fight-app_network

  # PostgreSQL database
  db:
    container_name: fight-app-db
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fightpick_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fight-app_network

  # Ollama AI service
  ollama:
    container_name: ollama
    image: ollama/ollama
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: "serve"
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
      - OLLAMA_COMPUTE_TYPE=cpu
      - OLLAMA_CONTEXT_SIZE=2048
    networks:
      - fight-app_network

volumes:
  postgres_data:
  ollama_data: 

networks:
  fight-app_network:
    driver: bridge
